{% stylesheet %}
.blog-page-wrapper {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  max-width: 1440px;
  margin: 0 auto;
  padding: 0;
  box-sizing: border-box;
  gap: 32px;
}

.blog-toc {
  max-width: 250px;
  width: 100%;
  position: -webkit-sticky;
  position: sticky;
  top: 132px;
  align-self: flex-start;
  box-sizing: border-box;
  flex-shrink: 0;
}

.blog-toc ul {
  list-style: none;
  padding-left: 0;
  margin: 0;
}

.blog-toc li {
  margin-bottom: 8px;
}

.blog-toc a {
  text-decoration: none;
  color: #161616A3;
  font-size: 14px;
}

.blog-toc a:hover {
  text-decoration: underline;
}

.blog-toc .toc-item{
  transition: color 0.2s ease, border-left 0.2s ease;
  padding-left: 8px;
  border-left: 2px solid transparent;
}

.blog-toc .toc-item.active-toc-link {
  color: #161616; 
  border-left-color: #161616;
  text-decoration: none;
}

.blog-toc .toc-item.active-toc-link a{
  color: #161616;
}

.blog-post-container {
  flex-grow: 1;
  max-width: 860px;
  margin-left: auto;
  margin-right: auto;
}

.blog-post-content {
  width: 100%;
  padding: 0 16px;
  box-sizing: border-box;
}

.blog-post-spacer {
  flex-grow: 1;
  min-width: 0;
}

html {
  scroll-behavior: smooth;
}

@media (max-width: 990px) {
  .blog-page-wrapper {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 0;
  }

  .blog-toc {
    display: none;
  }

  .blog-post-content{
    padding: 0;
  }

  .blog-post-container {
    width: 100%;
    max-width: none;
    margin: 0 auto;
  }

  .blog-post-spacer {
    display: none;
  }
}
{% endstylesheet %}
<div class="blog-page-wrapper">
  <aside class="blog-toc">
    <div id="toc-list">
    </div>
  </aside>

  <div class="blog-post-container">
    <div class="blog-post-content rte" id="blog-content">
      <rte-formatter>
        {{ article.content }}
      </rte-formatter>
    </div>
  </div>

  <div class="blog-post-spacer"></div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const content = document.querySelector("#blog-content");
    const tocList = document.querySelector("#toc-list");
    const headings = content.querySelectorAll("h2");
    const tocElements = [];

    headings.forEach((heading, index) => {
      const id = heading.innerText
        .toLowerCase()
        .replace(/[^\w]+/g, "-")
        .replace(/^-|-$/g, "") + "-" + index;
      heading.id = id;

      const tocItem = document.createElement("div");
      tocItem.classList.add("toc-item");

      const a = document.createElement("a");
      a.href = "#" + id;
      a.innerText = heading.innerText;
      tocItem.appendChild(a);
      tocList.appendChild(tocItem);

      tocElements.push({ tocItem: tocItem, link: a, headingId: id });

      a.addEventListener("click", function (e) {
        e.preventDefault();
        const targetId = this.getAttribute("href").substring(1);
        const targetElement = document.getElementById(targetId);

        if (targetElement) {
          window.scrollTo({
            top: targetElement.offsetTop - 50,
            behavior: "smooth"
          });
        }

        tocElements.forEach(item => item.tocItem.classList.remove("active-toc-link"));
      });
    });

    const observerOptions = {
      root: null,
      rootMargin: "0px 0px -50% 0px",
      threshold: 0
    };

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          tocElements.forEach(item => item.tocItem.classList.remove("active-toc-link"));

          const activeId = entry.target.id;
          const correspondingTocItem = tocElements.find(item => item.headingId === activeId);
          if (correspondingTocItem) {
            correspondingTocItem.tocItem.classList.add("active-toc-link");
          }
        }
      });
    }, observerOptions);

    headings.forEach(heading => {
      observer.observe(heading);
    });

    function setInitialActiveLink() {
      let foundActive = false;
      for (let i = headings.length - 1; i >= 0; i--) {
        const heading = headings[i];
        if (window.scrollY >= heading.offsetTop - 70) {
          tocElements.forEach(item => item.tocItem.classList.remove("active-toc-link"));
          const correspondingTocItem = tocElements.find(item => item.headingId === heading.id);
          if (correspondingTocItem) {
            correspondingTocItem.tocItem.classList.add("active-toc-link");
          }
          foundActive = true;
          break;
        }
      }

      if (!foundActive && tocElements.length > 0) {
        tocElements[0].tocItem.classList.add("active-toc-link");
      }
    }

    setInitialActiveLink();
    let scrollTimeout;
    window.addEventListener("scroll", () => {
        clearTimeout(scrollTimeout);
        scrollTimeout = setTimeout(() => {
            setInitialActiveLink();
        }, 100);
    });
  });
</script>

{% schema %}
{
  "name": "t:names.content",
  "settings": [],
  "presets": [
    {
      "name": "t:names.content"
    }
  ]
}
{% endschema %}